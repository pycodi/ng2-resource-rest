/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './ng2-resource-rest';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/http/src/http_module';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/http/src/backends/browser_xhr';
import * as import6 from '@angular/http/src/base_response_options';
import * as import7 from '@angular/http/src/backends/xhr_backend';
import * as import8 from '@angular/http/src/base_request_options';
import * as import9 from '@angular/core/src/di/injector';
import * as import10 from '@angular/core/src/i18n/tokens';
import * as import11 from '@angular/http/src/interfaces';
import * as import12 from '@angular/http/src/http';
class ResourceModuleInjector extends import0.NgModuleInjector<import1.ResourceModule> {
  _CommonModule_0:import2.CommonModule;
  _HttpModule_1:import3.HttpModule;
  _ResourceModule_2:import1.ResourceModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  __BrowserXhr_4:import5.BrowserXhr;
  __ResponseOptions_5:import6.BaseResponseOptions;
  __XSRFStrategy_6:any;
  __XHRBackend_7:import7.XHRBackend;
  __RequestOptions_8:import8.BaseRequestOptions;
  __Http_9:any;
  constructor(parent:import9.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import10.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  get _BrowserXhr_4():import5.BrowserXhr {
    if ((this.__BrowserXhr_4 == null)) { (this.__BrowserXhr_4 = new import5.BrowserXhr()); }
    return this.__BrowserXhr_4;
  }
  get _ResponseOptions_5():import6.BaseResponseOptions {
    if ((this.__ResponseOptions_5 == null)) { (this.__ResponseOptions_5 = new import6.BaseResponseOptions()); }
    return this.__ResponseOptions_5;
  }
  get _XSRFStrategy_6():any {
    if ((this.__XSRFStrategy_6 == null)) { (this.__XSRFStrategy_6 = import3._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_6;
  }
  get _XHRBackend_7():import7.XHRBackend {
    if ((this.__XHRBackend_7 == null)) { (this.__XHRBackend_7 = new import7.XHRBackend(this._BrowserXhr_4,this._ResponseOptions_5,this._XSRFStrategy_6)); }
    return this.__XHRBackend_7;
  }
  get _RequestOptions_8():import8.BaseRequestOptions {
    if ((this.__RequestOptions_8 == null)) { (this.__RequestOptions_8 = new import8.BaseRequestOptions()); }
    return this.__RequestOptions_8;
  }
  get _Http_9():any {
    if ((this.__Http_9 == null)) { (this.__Http_9 = import3.httpFactory(this._XHRBackend_7,this._RequestOptions_8)); }
    return this.__Http_9;
  }
  createInternal():import1.ResourceModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._HttpModule_1 = new import3.HttpModule();
    this._ResourceModule_2 = new import1.ResourceModule();
    return this._ResourceModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.HttpModule)) { return this._HttpModule_1; }
    if ((token === import1.ResourceModule)) { return this._ResourceModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    if ((token === import5.BrowserXhr)) { return this._BrowserXhr_4; }
    if ((token === import6.ResponseOptions)) { return this._ResponseOptions_5; }
    if ((token === import11.XSRFStrategy)) { return this._XSRFStrategy_6; }
    if ((token === import7.XHRBackend)) { return this._XHRBackend_7; }
    if ((token === import8.RequestOptions)) { return this._RequestOptions_8; }
    if ((token === import12.Http)) { return this._Http_9; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ResourceModuleNgFactory:import0.NgModuleFactory<import1.ResourceModule> = new import0.NgModuleFactory(ResourceModuleInjector,import1.ResourceModule);